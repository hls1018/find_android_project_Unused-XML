#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2017/10/21
# @Author  : linsheng
import os


'''
获取所有的xml文件
'''

def traverse_xml(file_path):

    xml_map = []

    for rt, dirs, files in os.walk(file_path):

        for filesitem in files :

            if  filesitem.endswith('.xml') and 'AndroidManifest.xml' not in filesitem  and 'values' not in rt  and "res"  in rt  and  "src" in rt:

                xmlfile_xml=filesitem.split('.xml')
                xml_map.append(xmlfile_xml[0])
    # print xml_map
    traverse_java(file_path,xml_map)
'''
获取所有的Java文件
'''
def traverse_java(file_path,xml_map):

    java_map = []

    for rt, dirs, files in os.walk(file_path):

        for filesitem in files:

            if (filesitem.endswith('.xml') and 'res' in rt  and "src" in rt  ) or (filesitem.endswith('.java') and 'java' in rt   and "src" in rt)  or ("AndroidManifest.xml"  in filesitem) :

                java_map.append(os.path.join(rt,filesitem))

    judge_exists(java_map,xml_map,file_path)

def judge_exists(java_map,xml_map,file_path):

    exists_map = []

    for xmlfile  in range(len(xml_map)):

        break_flag = False
        for javafile in range(len(java_map)):

            with open(java_map[javafile],'rb') as readjava:

                string_xml=readjava.readlines();

            for string_xml_item in string_xml:

                 if xml_map[xmlfile]  in string_xml_item:

                     exists_map.append(xml_map[xmlfile])
                     break_flag=True
                     break
            if break_flag==True:

                break;

    comparison_map(java_map,xml_map,exists_map,file_path)

def comparison_map(java_map,xml_map,exists_map,file_path):

    sava_map = []

    for exists_map_item  in  range(len(xml_map)):

            if  xml_map[exists_map_item] not in exists_map:

                print  str(xml_map[exists_map_item]) + "没有使用这个xml"
                sava_map.append(xml_map[exists_map_item])

    remove_xml(file_path,sava_map)

def remove_xml(file_path,sava_map):

    print '------------------'

    x = 0

    for rt, dirs, files in os.walk(file_path):

        for fileitems_rv in files:

            rvfileitem=fileitems_rv.split('.xml')

            if rvfileitem[0] in  sava_map:
                print 'sdfsdfsdsf'
                print os.path.getsize(os.path.join(rt, fileitems_rv))
                os.remove(os.path.join(rt,fileitems_rv))
                print os.path.join(rt,fileitems_rv)


                print x
                x+=1

if __name__ == '__main__':

    file_path = "/Users/linsheng/Documents/launcher5.0/trunk5.0/launcher"

    traverse_xml(file_path)




